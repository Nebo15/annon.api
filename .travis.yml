language: elixir
sudo: required
cache:
  directories:
  - deps
  - $HOME/docker
services:
  - docker
  - postgresql
addons:
  postgresql: "9.5"
elixir:
  - 1.3.4
otp_release:
  - 19.1
env:
  global:
    - MIX_ENV=test
    - DOCKER_HUB_ACCOUNT=nebo15
    - MAIN_BRANCHES="master develop staging" # Branches on which you want version to be incremented
    - RELEASE_BRANCH="master"
    - COVERALLS_REPO_TOKEN=cgG2HzcgLtSNdXmuIP9BarEdCFx9ePTPY
    # Docker credentials
    - secure: jT3fV9i5qISqpcRDlSJHpOOnpxvZmAFK7RzfNRBwiZjU4SY3/2XMbZFemv3HRRirDsDyaNlHoycO4KHZKM6/04Lev82C+wX8LsNvzHAi52Yd5Eh133R2U4aI90fPy9VX6BowdjMB4nnLsW3hksWEFoSDdhzRKlCVljmDyjrmyiTvcedI76WtxILDJ9OWYtRizEVbdjmLHmIXv8vNOA5FDUfNOuHn+GhKJUUwXlyMjvzEwz1AheC2cUeS4Hgc96U01owe13AYLHItsQNQas8k1AFGRu0LmDDop5fiUgBBPTmVGvQLUO3otungigs9MsqgKT+39pCRJHirSF9dReAQXQe5xXFkhbKHXdTuLn3Uc+TeAJPiZ7PCLCmGGalZjEkKTXnhJ1vkh0+tAI1wZOC04rjPTz0AEU53spgwktklPHzOAqBDsoK+dDNzoTvlFvVGcK23UiGuMUIiyuABFdAZ9/rRgbn3uBttzT6vpRHFU5T5CPeHvpzTAjpJGn1QztJPvHySVMtcWlb9arq7xVC/mLx9xHS3WweAqvMY4RHAMeRMoxmPBeEO5DlMhOvKkfmD2p+O4v/MsM723FzrwC4Z2dN2QCq2vjfnFtDizey0ML5qJmVYxUVMCSFylKkYbdiZ5RNxKme5rCI/RVz6Vz9EPGW/NL0nDCGdvMiI11gFt+M=
branches:
  # Releases are generated automatically, stop infinite build loop
  except:
    - /[0-9]*\.[0-9]*\.[0-9]*/
before_install:
  # Expose DB to Docker container
  - sudo /bin/bash ./bin/ci/init-db.sh
  - sudo /bin/bash ./bin/ci/init-statsd.sh
  # Load cached docker images
  - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
before_script:
  - epmd -daemon
script:
  # Increment version in mix.exs
  # Uncomment this if you want to increment patch version on each Travis build.
  - "./bin/version-increment.sh"
  # Install dependencies
  - mix deps.get
  # Run all tests except pending ones
  - mix test --trace
  # Submit code coverage report to Coveralls
  # Add --pro if you using private repo.
  - mix coveralls.travis --pro
  # Run static code analysis
  - mix credo -a
  # Check code style
  - mix dogma
  # Build Docker container
  - "./bin/build.sh"
  # Initialize DB for Docker container
  - MIX_ENV=dev mix ecto.setup
  # Run Docker container
  - sudo ./bin/start.sh
  - sleep 5
  - docker ps
  - RUNNING_CONTAINERS=`docker ps | wc -l`;
  - if [ "${RUNNING_CONTAINERS//[[:space:]]/}" = "1" ]; then echo "[E] Container is not started\!"; docker logs gateway --details --since 5h; exit 1; fi;
  # Run acceptance tests on Docker container
  - "MIX_TEST_DATABASE=gateway MIX_LOGGER_TEST_DATABASE=gateway_logger MIX_TEST_HOST=localhost MIX_TEST_PRIVATE_PORT=4001 MIX_TEST_PUBLIC_PORT=4000 mix test test/acceptance"
  # Rebuild docs
  - "mix docs --output docs"
after_success:
  # Submit Docker container to Docker Hub and create GitHub Release by pushing tag with changelog
  - ./bin/ci/push.sh
after_failure:
  - docker logs gateway --details --since 5h
before_cache:
  # Save tagged docker images
  - >
    mkdir -p $HOME/docker && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
    | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'
notifications:
  slack:
    rooms:
      secure: JP7eQT1AH9RDGBeDmPXIu4q8c3p2ee6WZfgrpBotyZvwcw+FvFgSwam4CYO5xmslo+m0kPJdCeMbIJ4sVZIQBXVrgLTXHkvR9fjdAj5l/VrEqvTbAb69MhX3T5kejZ4RXVOCPUjVYLKl8M0cvaYPTCx811wyJWJUWnB69toIJSyEaBHzg2eiW/qO9XCoLIsWFR0AFt905A9mjyjD3vr7bZUO9WSYL9ojo9ybMBamtOwXPN+84seBgKJ7jRR55su+D86PpZLvdeZ5SA7b5L63JPVqxnME19JEkwXj/tmf3UbBELa2EKaR9BbRAiBMeIsneBx4bgRhTLKG3WNNglEHQHIkPqDH3yzPDm7C5zv/N39Gzsk3WxKEUl5JDe3zHU2tNQfpWrRpwQANNdsWZQ1kF8YyVUsoyt82jCsmLMk81lPWDN9yzR/gZmNkH1IouysJFnM3aIex1XOeT5KFYQn1PeIAxo7M+vxjD1WeLU6zr1y7G8n7+q9dbxSxF6woh8DujQh7dusg46XNLErv+xe3IOMt1TtdnDiatMMOoGEBYhnTCuOhm4id9Vq2gbmBcHlJlmYQO/EtXWoh9fnoGq8dPa07sEujQMuMAqb+nnwHWJnKaq4rw7Jxzd/K3pIJaOGQuqt1uhZtF5ON/CpVMIT3tkMlJK97a3UaEUVkhgY/mHA=
